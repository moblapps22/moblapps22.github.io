(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{FRK5:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),o=a.n(n);a("q4sD"),a("WkIh"),a("8XYx");var r=function(e){var t,a;function n(){return e.apply(this,arguments)||this}return a=e,(t=n).prototype=Object.create(a.prototype),t.prototype.constructor=t,t.__proto__=a,n.prototype.render=function(){return o.a.createElement("section",{id:"projects",className:"main special"},o.a.createElement("header",{className:"major"},o.a.createElement("h2",null,"SEAMLESS WEBSITE CLOUD MIGRATION"),o.a.createElement("p",null,"My client needed to move a website receiving over 2.5 million requests using 250 GB of bandwidth per day into their AWS account within 8 weeks. The Linux, PHP & other libraries in use were several versions behind. Some code had up to 15 years of revisions to update and move to a new version control system. Even with limited time, I built a redundant, secure architecture leveraging multiple availability zones & separate VPCs. I upgraded and tested all major software versions and implemented a new deployment system with separate production, staging & development environments. Creative DNS + load balancing allowed us to complete a zero-downtime migration during transfer of domain name ownership.",o.a.createElement("br",null),"The Results: The new site can handle more traffic at a lower cost with fault-tolerance and fully documented configuration management and monitoring.")),o.a.createElement("p",{className:"content"}),o.a.createElement("header",{className:"major"},o.a.createElement("h2",null,"SERVERLESS AUTOMATION"),o.a.createElement("p",null,"I was engaged to move a customer API from another cloud provider into Amazon Web Services. The client was a small startup with no full-time devops engineers. The main requirement was to lower response time to under 200ms. I implemented Lambda + API Gateway + a custom deployment script to avoid setting up systems their team would have to monitor, moving their focus away from customer satisfaction. Because of some service limitations, I deployed a custom proxy solution requiring very little maintenance for the lowest possible latency utilizing the AWS Region closest to the user",o.a.createElement("br",null),"The Results: A faster site with fewer systems and easy global deployment any engineer can use.")))},n}(o.a.Component);t.default=r}}]);
//# sourceMappingURL=component---src-pages-projects-text-js-c1e789d67bda0c37f614.js.map